//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SilverlightTestApp.PublicServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublicServiceReference.IPublicService")]
    public interface IPublicService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPublicService/GetHuxSite", ReplyAction="http://tempuri.org/IPublicService/GetHuxSiteResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetHuxSite(SilverlightTestApp.PublicServiceReference.GetHuxSiteRequest request, System.AsyncCallback callback, object asyncState);
        
        SilverlightTestApp.PublicServiceReference.GetHuxSiteResponse EndGetHuxSite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPublicService/GetHuxSiteNoCache", ReplyAction="http://tempuri.org/IPublicService/GetHuxSiteNoCacheResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetHuxSiteNoCache(SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheRequest request, System.AsyncCallback callback, object asyncState);
        
        SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheResponse EndGetHuxSiteNoCache(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHuxSite", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetHuxSiteRequest {
        
        public GetHuxSiteRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHuxSiteResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetHuxSiteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SilverlightTestApp.PublicServiceReference.ArrayOfXElement GetHuxSiteResult;
        
        public GetHuxSiteResponse() {
        }
        
        public GetHuxSiteResponse(SilverlightTestApp.PublicServiceReference.ArrayOfXElement GetHuxSiteResult) {
            this.GetHuxSiteResult = GetHuxSiteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHuxSiteNoCache", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetHuxSiteNoCacheRequest {
        
        public GetHuxSiteNoCacheRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHuxSiteNoCacheResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetHuxSiteNoCacheResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SilverlightTestApp.PublicServiceReference.ArrayOfXElement GetHuxSiteNoCacheResult;
        
        public GetHuxSiteNoCacheResponse() {
        }
        
        public GetHuxSiteNoCacheResponse(SilverlightTestApp.PublicServiceReference.ArrayOfXElement GetHuxSiteNoCacheResult) {
            this.GetHuxSiteNoCacheResult = GetHuxSiteNoCacheResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPublicServiceChannel : SilverlightTestApp.PublicServiceReference.IPublicService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHuxSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHuxSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightTestApp.PublicServiceReference.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightTestApp.PublicServiceReference.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHuxSiteNoCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHuxSiteNoCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightTestApp.PublicServiceReference.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightTestApp.PublicServiceReference.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PublicServiceClient : System.ServiceModel.ClientBase<SilverlightTestApp.PublicServiceReference.IPublicService>, SilverlightTestApp.PublicServiceReference.IPublicService {
        
        private BeginOperationDelegate onBeginGetHuxSiteDelegate;
        
        private EndOperationDelegate onEndGetHuxSiteDelegate;
        
        private System.Threading.SendOrPostCallback onGetHuxSiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHuxSiteNoCacheDelegate;
        
        private EndOperationDelegate onEndGetHuxSiteNoCacheDelegate;
        
        private System.Threading.SendOrPostCallback onGetHuxSiteNoCacheCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PublicServiceClient() {
        }
        
        public PublicServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PublicServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetHuxSiteCompletedEventArgs> GetHuxSiteCompleted;
        
        public event System.EventHandler<GetHuxSiteNoCacheCompletedEventArgs> GetHuxSiteNoCacheCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightTestApp.PublicServiceReference.IPublicService.BeginGetHuxSite(SilverlightTestApp.PublicServiceReference.GetHuxSiteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHuxSite(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetHuxSite(System.AsyncCallback callback, object asyncState) {
            SilverlightTestApp.PublicServiceReference.GetHuxSiteRequest inValue = new SilverlightTestApp.PublicServiceReference.GetHuxSiteRequest();
            return ((SilverlightTestApp.PublicServiceReference.IPublicService)(this)).BeginGetHuxSite(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightTestApp.PublicServiceReference.GetHuxSiteResponse SilverlightTestApp.PublicServiceReference.IPublicService.EndGetHuxSite(System.IAsyncResult result) {
            return base.Channel.EndGetHuxSite(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private SilverlightTestApp.PublicServiceReference.ArrayOfXElement EndGetHuxSite(System.IAsyncResult result) {
            SilverlightTestApp.PublicServiceReference.GetHuxSiteResponse retVal = ((SilverlightTestApp.PublicServiceReference.IPublicService)(this)).EndGetHuxSite(result);
            return retVal.GetHuxSiteResult;
        }
        
        private System.IAsyncResult OnBeginGetHuxSite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetHuxSite(callback, asyncState);
        }
        
        private object[] OnEndGetHuxSite(System.IAsyncResult result) {
            SilverlightTestApp.PublicServiceReference.ArrayOfXElement retVal = this.EndGetHuxSite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHuxSiteCompleted(object state) {
            if ((this.GetHuxSiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHuxSiteCompleted(this, new GetHuxSiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHuxSiteAsync() {
            this.GetHuxSiteAsync(null);
        }
        
        public void GetHuxSiteAsync(object userState) {
            if ((this.onBeginGetHuxSiteDelegate == null)) {
                this.onBeginGetHuxSiteDelegate = new BeginOperationDelegate(this.OnBeginGetHuxSite);
            }
            if ((this.onEndGetHuxSiteDelegate == null)) {
                this.onEndGetHuxSiteDelegate = new EndOperationDelegate(this.OnEndGetHuxSite);
            }
            if ((this.onGetHuxSiteCompletedDelegate == null)) {
                this.onGetHuxSiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHuxSiteCompleted);
            }
            base.InvokeAsync(this.onBeginGetHuxSiteDelegate, null, this.onEndGetHuxSiteDelegate, this.onGetHuxSiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightTestApp.PublicServiceReference.IPublicService.BeginGetHuxSiteNoCache(SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHuxSiteNoCache(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetHuxSiteNoCache(System.AsyncCallback callback, object asyncState) {
            SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheRequest inValue = new SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheRequest();
            return ((SilverlightTestApp.PublicServiceReference.IPublicService)(this)).BeginGetHuxSiteNoCache(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheResponse SilverlightTestApp.PublicServiceReference.IPublicService.EndGetHuxSiteNoCache(System.IAsyncResult result) {
            return base.Channel.EndGetHuxSiteNoCache(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private SilverlightTestApp.PublicServiceReference.ArrayOfXElement EndGetHuxSiteNoCache(System.IAsyncResult result) {
            SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheResponse retVal = ((SilverlightTestApp.PublicServiceReference.IPublicService)(this)).EndGetHuxSiteNoCache(result);
            return retVal.GetHuxSiteNoCacheResult;
        }
        
        private System.IAsyncResult OnBeginGetHuxSiteNoCache(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetHuxSiteNoCache(callback, asyncState);
        }
        
        private object[] OnEndGetHuxSiteNoCache(System.IAsyncResult result) {
            SilverlightTestApp.PublicServiceReference.ArrayOfXElement retVal = this.EndGetHuxSiteNoCache(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHuxSiteNoCacheCompleted(object state) {
            if ((this.GetHuxSiteNoCacheCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHuxSiteNoCacheCompleted(this, new GetHuxSiteNoCacheCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHuxSiteNoCacheAsync() {
            this.GetHuxSiteNoCacheAsync(null);
        }
        
        public void GetHuxSiteNoCacheAsync(object userState) {
            if ((this.onBeginGetHuxSiteNoCacheDelegate == null)) {
                this.onBeginGetHuxSiteNoCacheDelegate = new BeginOperationDelegate(this.OnBeginGetHuxSiteNoCache);
            }
            if ((this.onEndGetHuxSiteNoCacheDelegate == null)) {
                this.onEndGetHuxSiteNoCacheDelegate = new EndOperationDelegate(this.OnEndGetHuxSiteNoCache);
            }
            if ((this.onGetHuxSiteNoCacheCompletedDelegate == null)) {
                this.onGetHuxSiteNoCacheCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHuxSiteNoCacheCompleted);
            }
            base.InvokeAsync(this.onBeginGetHuxSiteNoCacheDelegate, null, this.onEndGetHuxSiteNoCacheDelegate, this.onGetHuxSiteNoCacheCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightTestApp.PublicServiceReference.IPublicService CreateChannel() {
            return new PublicServiceClientChannel(this);
        }
        
        private class PublicServiceClientChannel : ChannelBase<SilverlightTestApp.PublicServiceReference.IPublicService>, SilverlightTestApp.PublicServiceReference.IPublicService {
            
            public PublicServiceClientChannel(System.ServiceModel.ClientBase<SilverlightTestApp.PublicServiceReference.IPublicService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetHuxSite(SilverlightTestApp.PublicServiceReference.GetHuxSiteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetHuxSite", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightTestApp.PublicServiceReference.GetHuxSiteResponse EndGetHuxSite(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightTestApp.PublicServiceReference.GetHuxSiteResponse _result = ((SilverlightTestApp.PublicServiceReference.GetHuxSiteResponse)(base.EndInvoke("GetHuxSite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHuxSiteNoCache(SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetHuxSiteNoCache", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheResponse EndGetHuxSiteNoCache(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheResponse _result = ((SilverlightTestApp.PublicServiceReference.GetHuxSiteNoCacheResponse)(base.EndInvoke("GetHuxSiteNoCache", _args, result)));
                return _result;
            }
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Silverlight.ServiceReference", "4.0.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement() {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes {
            get {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema() {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer) {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            ) {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader) {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            ) {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element)) {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else {
                    reader.Skip();
                }
            }
        }
    }
}
